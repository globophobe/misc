#!/usr/bin/env python
import os
import shutil
import subprocess

import fire

XCODE_APP_PLATFORM_DIR = "/Applications/Xcode.app/Contents/Developer/Platforms"
PIP_CACHE_DIR = "~/Library/Caches/pip/http"
PIPENV_CACHE_DIR = "~/Library/Caches/pipenv"
XCODE_DERIVED_DATA_DIR = "~/Library/Developer/Xcode/DerivedData"
COCOA_POD_CACHE_DIR = "~/Library/Caches/CocoaPods"


def delete_files(directory):
    absolute_path = os.path.expanduser(directory)
    paths = os.listdir(absolute_path)
    for path in paths:
        p = os.path.join(absolute_path, path)
        shutil.rmtree(p)


def cleanup_homebrew():
    subprocess.check_call(["brew", "cleanup", "-s"])


def clean_pip_cache():
    delete_files(PIP_CACHE_DIR)


def clean_pipenv_cache():
    absolute_path = os.path.expanduser(PIPENV_CACHE_DIR)
    if os.path.exists(absolute_path):
        shutil.rmtree(absolute_path)


def clean_yarn_cache():
    subprocess.check_call(["yarn", "cache", "clean"])


def xcode_app_platform():
    platforms = (
        'WatchOS.platform',
        'AppleTVOS.platform',
        'WatchSimulator.platform',
        'AppleTVSimulator.platform'
    )
    for platform in platforms:
        path = os.path.join(XCODE_APP_PLATFORM_DIR, platform)
        if os.path.exists(path):
            shutil.rmtree(path)


def xcode_derived_data():
    delete_files(XCODE_DERIVED_DATA_DIR)


def clean_cocoa_pods():
    subprocess.check_call(["pod", "cache", "--clean", "all"])


def main(derived=0):
    cleanup_homebrew()
    clean_pip_cache()
    clean_pipenv_cache()
    clean_yarn_cache()
    xcode_app_platform()
    if derived:
        xcode_derived_data()


if __name__ == "__main__":
    fire.Fire(main)
